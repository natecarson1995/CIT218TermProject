// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TermProject.Data;

namespace TermProject.Migrations
{
    [DbContext(typeof(ShortStoryContext))]
    [Migration("20211213165003_AddedAuthor")]
    partial class AddedAuthor
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TermProject.Models.Comment", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnName("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Dislikes")
                        .HasColumnType("int");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<string>("ShortStoryID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("ShortStoryID");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            ID = "a76a66f9-88d4-493e-a6e4-9f29aa6592e6",
                            Author = "System",
                            Content = "Comment on short story #1",
                            CreatedAt = new DateTime(2021, 12, 13, 11, 50, 3, 138, DateTimeKind.Local).AddTicks(6852),
                            Dislikes = 0,
                            Likes = 0,
                            ShortStoryID = "93043cd9-80b3-4cab-a359-80de99d439be"
                        },
                        new
                        {
                            ID = "0dcb7f93-d0e7-443e-832f-d122f7f55bb4",
                            Author = "System",
                            Content = "Comment on short story #2",
                            CreatedAt = new DateTime(2021, 12, 13, 11, 50, 3, 138, DateTimeKind.Local).AddTicks(7891),
                            Dislikes = 0,
                            Likes = 0,
                            ShortStoryID = "a703b46c-27b4-4542-aae4-4fbf4364d55e"
                        },
                        new
                        {
                            ID = "5197d04c-6854-4dfd-88f0-481aa140cd10",
                            Author = "System",
                            Content = "Comment on short story #3",
                            CreatedAt = new DateTime(2021, 12, 13, 11, 50, 3, 138, DateTimeKind.Local).AddTicks(7945),
                            Dislikes = 0,
                            Likes = 0,
                            ShortStoryID = "6779f4f7-877f-4e2c-8613-b3e7b97dda66"
                        },
                        new
                        {
                            ID = "7c05510d-a8d2-4061-9995-9e4f173d73a2",
                            Author = "System",
                            Content = "Comment on short story #4",
                            CreatedAt = new DateTime(2021, 12, 13, 11, 50, 3, 138, DateTimeKind.Local).AddTicks(7951),
                            Dislikes = 0,
                            Likes = 0,
                            ShortStoryID = "175c0a01-59fb-4921-8573-3424c2b300e7"
                        });
                });

            modelBuilder.Entity("TermProject.Models.ShortStory", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnName("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Dislikes")
                        .HasColumnType("int");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(24)")
                        .HasMaxLength(24);

                    b.HasKey("ID");

                    b.ToTable("ShortStories");

                    b.HasData(
                        new
                        {
                            ID = "93043cd9-80b3-4cab-a359-80de99d439be",
                            Author = "System",
                            Content = "Content for short story #1",
                            CreatedAt = new DateTime(2021, 12, 13, 11, 50, 3, 136, DateTimeKind.Local).AddTicks(707),
                            Dislikes = 0,
                            Likes = 0,
                            Title = "Short story #1"
                        },
                        new
                        {
                            ID = "a703b46c-27b4-4542-aae4-4fbf4364d55e",
                            Author = "System",
                            Content = "Content for short story #2",
                            CreatedAt = new DateTime(2021, 12, 13, 11, 50, 3, 138, DateTimeKind.Local).AddTicks(5727),
                            Dislikes = 0,
                            Likes = 0,
                            Title = "Short story #2"
                        },
                        new
                        {
                            ID = "6779f4f7-877f-4e2c-8613-b3e7b97dda66",
                            Author = "System",
                            Content = "Content for short story #3",
                            CreatedAt = new DateTime(2021, 12, 13, 11, 50, 3, 138, DateTimeKind.Local).AddTicks(5778),
                            Dislikes = 0,
                            Likes = 0,
                            Title = "Short story #3"
                        },
                        new
                        {
                            ID = "175c0a01-59fb-4921-8573-3424c2b300e7",
                            Author = "System",
                            Content = "Content for short story #4",
                            CreatedAt = new DateTime(2021, 12, 13, 11, 50, 3, 138, DateTimeKind.Local).AddTicks(5836),
                            Dislikes = 0,
                            Likes = 0,
                            Title = "Short story #4"
                        });
                });

            modelBuilder.Entity("TermProject.Models.Comment", b =>
                {
                    b.HasOne("TermProject.Models.ShortStory", null)
                        .WithMany("Comments")
                        .HasForeignKey("ShortStoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
