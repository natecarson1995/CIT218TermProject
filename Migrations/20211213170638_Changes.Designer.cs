// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TermProject.Data;

namespace TermProject.Migrations
{
    [DbContext(typeof(ShortStoryContext))]
    [Migration("20211213170638_Changes")]
    partial class Changes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TermProject.Models.Comment", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnName("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Dislikes")
                        .HasColumnType("int");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<string>("ShortStoryID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("ShortStoryID");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            ID = "6cd70322-8463-458b-a9c4-e2c3dfa25b1b",
                            Author = "System",
                            Content = "Comment on short story #1",
                            CreatedAt = new DateTime(2021, 12, 13, 12, 6, 38, 393, DateTimeKind.Local).AddTicks(9061),
                            Dislikes = 0,
                            Likes = 0,
                            ShortStoryID = "af63e992-ec45-4110-965d-12ab0d2c8dd3"
                        },
                        new
                        {
                            ID = "3c18a16c-6895-4910-9765-25039ad6c059",
                            Author = "System",
                            Content = "Comment on short story #2",
                            CreatedAt = new DateTime(2021, 12, 13, 12, 6, 38, 394, DateTimeKind.Local).AddTicks(68),
                            Dislikes = 0,
                            Likes = 0,
                            ShortStoryID = "a28fd4d4-3549-499c-a503-4ff446cea506"
                        },
                        new
                        {
                            ID = "6faf8db8-5620-4f34-a5e5-a8e3d299a5bd",
                            Author = "System",
                            Content = "Comment on short story #3",
                            CreatedAt = new DateTime(2021, 12, 13, 12, 6, 38, 394, DateTimeKind.Local).AddTicks(129),
                            Dislikes = 0,
                            Likes = 0,
                            ShortStoryID = "ea8d9a56-ae55-4c57-9787-6474205052ad"
                        },
                        new
                        {
                            ID = "05b1ff76-02b6-4ea2-bd66-5df644b34293",
                            Author = "System",
                            Content = "Comment on short story #4",
                            CreatedAt = new DateTime(2021, 12, 13, 12, 6, 38, 394, DateTimeKind.Local).AddTicks(182),
                            Dislikes = 0,
                            Likes = 0,
                            ShortStoryID = "29c69861-3c82-4a10-818e-226e2a763f3d"
                        });
                });

            modelBuilder.Entity("TermProject.Models.ShortStory", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnName("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Dislikes")
                        .HasColumnType("int");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(24)")
                        .HasMaxLength(24);

                    b.HasKey("ID");

                    b.ToTable("ShortStories");

                    b.HasData(
                        new
                        {
                            ID = "af63e992-ec45-4110-965d-12ab0d2c8dd3",
                            Author = "System",
                            Content = "Content for short story #1",
                            CreatedAt = new DateTime(2021, 12, 13, 12, 6, 38, 391, DateTimeKind.Local).AddTicks(2972),
                            Dislikes = 0,
                            Likes = 0,
                            Title = "Short story #1"
                        },
                        new
                        {
                            ID = "a28fd4d4-3549-499c-a503-4ff446cea506",
                            Author = "System",
                            Content = "Content for short story #2",
                            CreatedAt = new DateTime(2021, 12, 13, 12, 6, 38, 393, DateTimeKind.Local).AddTicks(8025),
                            Dislikes = 0,
                            Likes = 0,
                            Title = "Short story #2"
                        },
                        new
                        {
                            ID = "ea8d9a56-ae55-4c57-9787-6474205052ad",
                            Author = "System",
                            Content = "Content for short story #3",
                            CreatedAt = new DateTime(2021, 12, 13, 12, 6, 38, 393, DateTimeKind.Local).AddTicks(8076),
                            Dislikes = 0,
                            Likes = 0,
                            Title = "Short story #3"
                        },
                        new
                        {
                            ID = "29c69861-3c82-4a10-818e-226e2a763f3d",
                            Author = "System",
                            Content = "Content for short story #4",
                            CreatedAt = new DateTime(2021, 12, 13, 12, 6, 38, 393, DateTimeKind.Local).AddTicks(8083),
                            Dislikes = 0,
                            Likes = 0,
                            Title = "Short story #4"
                        });
                });

            modelBuilder.Entity("TermProject.Models.Comment", b =>
                {
                    b.HasOne("TermProject.Models.ShortStory", null)
                        .WithMany("Comments")
                        .HasForeignKey("ShortStoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
